Copying tests/userprog/write-bad-ptr into /tmp/E9bE0ODI7r.dsk...
Copying ../../tests/userprog/sample.txt into /tmp/E9bE0ODI7r.dsk...
Writing command line to /tmp/xiE5R2m2PC.dsk...
qemu -hda /tmp/xiE5R2m2PC.dsk -hdb /tmp/w_MTcb9yVD.dsk -hdc /tmp/E9bE0ODI7r.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put write-bad-ptr put sample.txt run write-bad-ptr
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  418,611,200 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 100 sector (50 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-bad-ptr':
Before child push back
After child push back
Before waiting in load_sema
Writing write-bad-ptr to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
*esp is 0xbfffffdc
stack contents:
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  01 00 00 00 e8 ff ff bf-f2 ff ff bf 00 00 00 00 |................|
bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
c0000000  53 ff 00 f0 53 ff 00 f0-c3 e2 00 f0 53 ff 00 f0 |S...S.......S...|
c000000f	 	
c000000e	 	
c000000d	 	
c000000c	S	f000ff53	
--------------------------------------------------------------
c000000b	 	
c000000a	 	
c0000009	 	
c0000008	 	f000e2c3	
--------------------------------------------------------------
c0000007	 	
c0000006	 	
c0000005	 	
c0000004	S	f000ff53	
--------------------------------------------------------------
c0000003	 	
c0000002	 	
c0000001	 	
c0000000	S	f000ff53	
------- the border between KERNEL SPACE and USER SPACE -------
bfffffff	 	
bffffffe	r	
bffffffd	t	
bffffffc	p	727470	
--------------------------------------------------------------
bffffffb	-	
bffffffa	d	
bffffff9	a	
bffffff8	b	2d646162	
--------------------------------------------------------------
bffffff7	-	
bffffff6	e	
bffffff5	t	
bffffff4	i	2d657469	
--------------------------------------------------------------
bffffff3	r	
bffffff2	w	
bffffff1	 	
bffffff0	 	72770000	
--------------------------------------------------------------
bfffffef	 	
bfffffee	 	
bfffffed	 	
bfffffec	 	0	
--------------------------------------------------------------
bfffffeb	 	
bfffffea	 	
bfffffe9	 	
bfffffe8	 	bffffff2	
--------------------------------------------------------------
bfffffe7	 	
bfffffe6	 	
bfffffe5	 	
bfffffe4	 	bfffffe8	
--------------------------------------------------------------
bfffffe3	 	
bfffffe2	 	
bfffffe1	 	
bfffffe0	 	1	
--------------------------------------------------------------
bfffffdf	 	
bfffffde	 	
bfffffdd	 	
bfffffdc	 	0	
--------------------------------------------------------------
Before last line in start_process()
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
Awoke from load_sema
End of process execute
In process_wait()
Waiting for child to terminate...
Page fault at 0x10123420: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01065b9
 cr2=10123420 error=00000000
 eax=c011c20c ebx=0000007b ecx=00000000 edx=00000000
 esi=10123420 edi=c011c20c esp=c0114ba8 ebp=00000000
 cs=0008 ds=0010 es=0010 ss=b02c
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc01070cb.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 31 idle ticks, 28 kernel ticks, 7 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 91 reads, 210 writes
hd1:0: 100 reads, 0 writes
Console: 3619 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
