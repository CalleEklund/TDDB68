Copying tests/userprog/exec-multiple into /tmp/Hnu4CCIIi3.dsk...
Copying tests/userprog/child-simple into /tmp/Hnu4CCIIi3.dsk...
Writing command line to /tmp/mb8zLwTM4h.dsk...
qemu -hda /tmp/mb8zLwTM4h.dsk -hdb /tmp/ssxAA7xRtz.dsk -hdc /tmp/Hnu4CCIIi3.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put exec-multiple put child-simple run exec-multiple
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  419,020,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 194 sector (97 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Executing 'exec-multiple':
Before child push back
After child push back
Before waiting in load_sema
Value of load_sema in pr_execute: 0
Writing exec-multiple to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
Before load sema up
Before last line in start_process()
(exec-multiple) begin
Syscall exec
Before child push back
After child push back
Before waiting in load_sema
Value of load_sema in pr_execute: 0
Awoke from load_sema
End of process execute
In process_wait()
Waiting for child to terminate...
Writing child-simple to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
Before load sema up
Before last line in start_process()
(child-simple) run
Syscall exit
child-simple: exit(81)
Start of process_exit()
After sema up in process_exit()
At end of process_exit()
Awoke from load_sema
End of process execute
Syscall wait
In process_wait()
Syscall exec
Before child push back
After child push back
Before waiting in load_sema
Value of load_sema in pr_execute: 0
Writing child-simple to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
Before load sema up
Before last line in start_process()
(child-simple) run
Syscall exit
child-simple: exit(81)
Start of process_exit()
After sema up in process_exit()
At end of process_exit()
Awoke from load_sema
End of process execute
Syscall wait
In process_wait()
Syscall exec
Before child push back
After child push back
Before waiting in load_sema
Value of load_sema in pr_execute: 0
Writing child-simple to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
Before load sema up
Before last line in start_process()
(child-simple) run
Syscall exit
child-simple: exit(81)
Start of process_exit()
After sema up in process_exit()
At end of process_exit()
Awoke from load_sema
End of process execute
Syscall wait
In process_wait()
Syscall exec
Before child push back
After child push back
Before waiting in load_sema
Value of load_sema in pr_execute: 0
Writing child-simple to stack
Put argv at addr 0xbfffffe4
Put argc at addr 0xbfffffe0
End of setup_stack()
Before load sema up
Before last line in start_process()
(child-simple) run
Syscall exit
child-simple: exit(81)
Start of process_exit()
After sema up in process_exit()
At end of process_exit()
Awoke from load_sema
End of process execute
Syscall wait
In process_wait()
(exec-multiple) end
Syscall exit
exec-multiple: exit(0)
Start of process_exit()
After sema up in process_exit()
Execution of 'exec-multiple' complete.
Timer: 68 ticks
Thread: 35 idle ticks, 24 kernel ticks, 9 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 230 reads, 398 writes
hd1:0: 194 reads, 0 writes
Console: 3317 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
